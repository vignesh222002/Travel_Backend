// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model States {
  id     Int      @id @default(autoincrement())
  state  String
  places Places[]
}

model Places {
  id                 Int            @id @default(autoincrement())
  place              String
  state_id           Int
  landscape          String
  description        String?
  is_visited         Boolean        @default(false)
  is_oneday_trip     Boolean        @default(false)
  stay_option        String?
  best_time_to_visit String?
  image_link         String?
  count              Int            @default(0)
  spots              Spots[]
  nearest_place_ref  Nearest_place? @relation("place_id")
  state              States         @relation(fields: [state_id], references: [id])
  Trip_days_ref      Trip_days[]
}

model Spots {
  id              Int         @id @default(autoincrement())
  spot            String
  place_id        Int
  category        String
  description     String?
  timing          String
  season          String
  image_link      String?
  google_location String?
  must_visit      Boolean     @default(false)
  place_ref       Places      @relation(fields: [place_id], references: [id], onDelete: Cascade)
  Trip_days_ref   Trip_days[]
}

model Nearest_place {
  id            Int    @id @default(autoincrement())
  place_id      Int    @unique
  nearest_place String
  place_id_ref  Places @relation(fields: [place_id], references: [id], name: "place_id", onDelete: Cascade)
}

model Trips {
  id            Int         @id @default(autoincrement())
  trip_name     String
  description   String
  members       String
  amount_spend   Int         @default(0)
  Trip_days_ref Trip_days[]
}

model Trip_days {
  id          Int    @id @default(autoincrement())
  trip_id     Int
  date        String
  place_id    Int
  spot_id     Int
  order       Int
  description String
  Trips_ref   Trips  @relation(fields: [trip_id], references: [id], onDelete: Cascade)
  spots_ref   Spots  @relation(fields: [spot_id], references: [id], onDelete: Cascade)
  place_ref   Places @relation(fields: [place_id], references: [id], onDelete: Cascade)
}
